@using X.PagedList
@using X.PagedList.Mvc.Core
@using X.PagedList.Web.Common
@model IPagedList<Repository.Model.Category>

<div class="row pt-4">
    <div class="col-6">
        <h2 class="text-primary">Category List</h2>
    </div>
    <div class="col-6 text-end">
        <a asp-controller="Category" asp-action="Create" class="btn btn-primary">
            Create New Category
        </a>
    </div>
</div>
@if (Model != null && Model.Count() > 0)
{
    <table class="table">
        <thead>
            <tr>
                <td>Name</td>
            </tr>
        </thead>
        <tbody>
            @foreach (var item in Model)
            {
                <tr>
                    <td>@item.CategoryName</td>
                    <td>
                        <a class="btn btn-primary" href="/Category/Edit?id=@item.Id">Edit</a>
                    </td>
                    <td>
                        <a class="btn btn-danger" href="/Category/Delete?id=@item.Id">Delete</a>
                    </td>
                </tr>
            }
        </tbody>
    </table>
    <div class="mb-5">
    @Html.PagedListPager(Model, page => Url.Action("index", new { page = page }), new PagedListRenderOptions()
    {
    ActiveLiElementClass = "active",
    PageClasses = new[]{ "page-link"},
    LiElementClasses=new[] { "page-item" },
    UlElementClasses = new[] { "pagination","justify-content-center", "mt-3" },
    LinkToNextPageFormat = "Next",
    LinkToPreviousPageFormat = "Previous",
    MaximumPageNumbersToDisplay = 5,
    DisplayLinkToPreviousPage = PagedListDisplayMode.Always,
    DisplayLinkToNextPage = PagedListDisplayMode.Always
    })
    </div>

}
